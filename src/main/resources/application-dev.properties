#Segredo do TOKEN

#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;


jwt.secret=SequenciaDeCaracteresParaAssinarToken

#Tempo expiration da chave
jwt.expiration=86400000

#Banco de dados Heroku

#Banco de dados Local
spring.datasource.url=jdbc:mysql://b1e54af485089e:bee68329@us-cdbr-east-03.cleardb.com/heroku_d23c6f6ba40745d?reconnect=true
#spring.datasource.username=root
#spring.datasource.password=admin

spring.jpa.hibernate.ddl-auto=none
#create
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false


# Condigurando o envio de Email pelo SendGrid

#spring.mail.host=smtp.sendgrid.net
#spring.mail.port=587
#spring.mail.username=apikey
#spring.mail.password=

#myhero.email.remetente=MyHero <naoresponder.myhero@gmail.com>


spring.mail.host=smtp.gmail.com
spring.mail.username=naoresponder.myhero@gmail.com
#spring.mail.password=

myhero.email.remetente=MyHero <naoresponder.myhero@gmail.com>

spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.enable = true
